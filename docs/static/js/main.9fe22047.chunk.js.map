{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","id","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA4CeA,EAzCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,cADA,CACA,QAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAEhCR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOd,UACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,UAwBnB,qBAAKG,GAAG,c,+BC9BPC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHZ,GAAIY,EAAIZ,GACRa,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPM,EAAc,SAAEJ,GAIzB,OAFAK,QAAQC,IAAIN,GAGR,sBAAKO,UAAU,yCAAf,UACI,qBAAKC,IAAMR,EAAIR,IAAMiB,IAAMT,EAAIC,QAC/B,kCAAKD,EAAIC,MAAT,WCLCS,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAEtB,ECFwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLhB,KAAMmB,EACNL,SAAS,MAEd,UAGZ,CAACrB,IAKGsB,EDxB0BM,CAAc5B,GAAlCY,EAAb,EAAQL,KAAac,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDjB,EAArD,OAEEqB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQL,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIZ,aEqBvB+B,EAnCM,WAGjB,MAAoC5C,mBAAS,CAAC,KAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAGA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ8C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEQA,SAAYA,GADNA,Y,MClBlC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9fe22047.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {        \r\n         \r\n        setCategories( cats => [inputValue, ...cats ]);\r\n        setInputValue('');\r\n\r\n        } \r\n    }\r\n\r\n    return (\r\n        //<> Aqui no es necesario fragmento pq form tb agrupa\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                \r\n            />\r\n            <div id='error'></div>\r\n            </form>   \r\n        //</>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\n\r\nexport const getGifs = async( category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TqQWaXQEPNo35KO2h3wv5z9YBYbPQ6bu`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( img ) => {\r\n\r\n    console.log(img)\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ img.url } alt={ img.title }/>\r\n            <p> {img.title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } //img={ img }\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setTimeout( () => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 2000);\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n\r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories } />\r\n        <hr />\r\n\r\n        {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category => (\r\n                \r\n                    <GifGrid \r\n                            key={ category }\r\n                            category= { category }\r\n\r\n                    />\r\n                \r\n                ))\r\n                \r\n            }\r\n        </ol>\r\n\r\n      </>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}